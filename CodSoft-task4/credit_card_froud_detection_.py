# -*- coding: utf-8 -*-
"""Credit Card Froud Detection .ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1GcZvdygZc-67kQz-FftOideIEPBFu867

# Credit Card Fraud Detection

Import The Libraries
"""

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, classification_report

"""Load The Dataset"""

credit_data=pd.read_csv("/content/creditcard[2].csv")
credit_data.head()

credit_data.tail()

"""Check The Null values"""

credit_data.isnull().sum()

"""Check The Legit Transction & Fraulent Transction

0 -> Normal/Legit Transction

1 -> Fraudalent Transction
"""

credit_data["Class"].value_counts()

legit=credit_data[credit_data.Class==0]
fraud=credit_data[credit_data.Class==1]

print(legit.shape)

legit.Amount.describe()

fraud.Amount.describe()

"""Compare The Value Both Transction"""

credit_data.groupby("Class").mean()

"""Bulit a sample dataset which containing silmilar distribution of Legit Transaction & Fraudulent Transaction

In 284315 Legit Transaction, We going to take 492 Transaction From Legit Transaction
"""

legit_sample=legit.sample(n=492)
legit_sample.head()

"""We have 492 Legit Transcation and 492 Fraudlant Transction"""

new_credit_data=pd.concat([legit_sample,fraud],axis=0)
new_credit_data.head()

"""Dividing The Dataset into this Independent & Dependent variable"""

x=new_credit_data.drop(["Class"],axis=1)
y=new_credit_data["Class"]

"""Split Data into Training and Testing Data"""

x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.2,random_state=42)

print(x_train.shape,y_train.shape,x_test.shape,y_test.shape)

"""Applying Logistic Regression"""

model=LogisticRegression(solver='lbfgs',max_iter=1000)
model.fit(x_train,y_train)

y_pred=model.predict(x_test)

model_accuracy_score=accuracy_score(y_test,y_pred)

"""Check Accuracy score"""

print(model_accuracy_score)

"""Check The Accuracy, Recall, Precision and F1-score"""

print(classification_report(y_test,y_pred))