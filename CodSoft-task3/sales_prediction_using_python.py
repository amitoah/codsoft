# -*- coding: utf-8 -*-
"""Sales prediction using python.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/147RJu5jUewHLppStwuq2iwUKoccjh4z0

# Sales prediction

Import The Libraries
"""

import numpy as np
import pandas as pd
from matplotlib import pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression

"""Load The Dataset"""

ads_sales=pd.read_csv("/content/advertising.csv")
ads_sales.head()

"""Data Analysis"""

ads_sales.shape

ads_sales.isnull().sum()

"""Basic Observation

Avg expense spend is highest on TV

Avg expense spend is lowest on Radio

Max sale is 27 and min is 1.6
"""

ads_sales.describe()

"""Exploratory Data Analysis"""

sns.scatterplot(x="TV",y="Sales",data=ads_sales)
plt.show()

sns.scatterplot(x="Radio",y="Sales",color="red",data=ads_sales)
plt.show()

sns.scatterplot(x="Newspaper",y="Sales",color="green",data=ads_sales)
plt.show()

plt.hist(ads_sales["TV"],bins=10)
plt.xlabel("TV")
plt.ylabel("Sales")
plt.show()

plt.hist(ads_sales["Radio"],color="red",bins=10)
plt.xlabel("RADIO")
plt.ylabel("sales")
plt.show()

plt.hist(ads_sales["Newspaper"],color="green",bins=10)
plt.xlabel("NEWSPAPER")
plt.ylabel("sales")
plt.show()

"""We can see that sales are very correlated with TV"""

sns.heatmap(ads_sales.corr(),annot=True)
plt.show()

"""Dividing The Dataset into This Independant & Dependant variable"""

x=ads_sales[["TV"]]
y=ads_sales["Sales"]

print(x.shape,y.shape)

"""Split Data into Training and Testing Data"""

X_train, X_test,y_train,y_test = train_test_split(x,y,test_size=0.3,random_state=42)

print(X_train)

print(X_test)

"""Applyin Linear Regression"""

model=LinearRegression()

model.fit(X_train,y_train)

model.predict(X_test)

"""Accuracy Score"""

model.score(X_test , y_test)

"""y=mx+c

m-Coeffcient

c- Intercept of The Line

x - Independant variable

y - Dependant variable
"""

model.coef_

model.intercept_

0.05483488*163.3+7.206554548173251 #y = mx +c

"""Plot The Linear Regression"""

plt.scatter(X_train,y_train)
plt.plot(X_train, 0.05483488*X_train+7.206554548173251 ,color="red") # X_train - TV
plt.xlabel("TV")
plt.ylabel("advertising sales")
plt.show()